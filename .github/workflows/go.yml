name: Release Go Binary

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-aur:
    needs: goreleaser
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Update AUR package
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
          
          # Configure SSH to use the key
          cat > ~/.ssh/config << EOF
          Host aur.archlinux.org
            IdentityFile ~/.ssh/aur
            User aur
          EOF
          chmod 600 ~/.ssh/config
          
          git clone ssh://aur@aur.archlinux.org/awsm-bin.git awsm-bin
          cd awsm-bin
          
          VERSION=${GITHUB_REF#refs/tags/v}
          sed -i "s/pkgver=.*/pkgver=${VERSION}/" PKGBUILD
          updpkgsums
          
          git config user.name "${{ secrets.AUR_USERNAME }}"
          git config user.email "${{ secrets.AUR_EMAIL }}"
          git add .
          git commit -m "Update to version ${VERSION}"
          git push origin master