name: Release Go Binary

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-aur:
    needs: goreleaser
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: AleG03/aur-publish-action-go-releaser@v1
        with:
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          package_name: awsm-bin
          git_username: ${{ secrets.AUR_USERNAME }}
          git_email: ${{ secrets.AUR_EMAIL }}
          
  update-homebrew:
    needs: goreleaser
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Extract version
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: AleG03/awsm-tap
          token: ${{ secrets.TAP_TOKEN }}
          path: awsm-tap

      - name: Calculate SHA256 for ARM64
        id: sha_arm64
        run: |
          curl -sL "https://github.com/AleG03/awsm/releases/download/${{ steps.extract_version.outputs.TAG }}/awsm_${{ steps.extract_version.outputs.VERSION }}_darwin_arm64.tar.gz" | sha256sum | cut -d' ' -f1 > sha_arm64.txt
          echo "SHA=$(cat sha_arm64.txt)" >> $GITHUB_OUTPUT

      - name: Calculate SHA256 for AMD64
        id: sha_amd64
        run: |
          curl -sL "https://github.com/AleG03/awsm/releases/download/${{ steps.extract_version.outputs.TAG }}/awsm_${{ steps.extract_version.outputs.VERSION }}_darwin_amd64.tar.gz" | sha256sum | cut -d' ' -f1 > sha_amd64.txt
          echo "SHA=$(cat sha_amd64.txt)" >> $GITHUB_OUTPUT

      - name: Update formula
        run: |
          cd awsm-tap
          cat > Formula/awsm.rb << EOL
          class Awsm < Formula
            desc "CLI tool to simplify working with AWS profiles, credentials, and sessions"
            homepage "https://github.com/AleG03/awsm"
            version "${{ steps.extract_version.outputs.VERSION }}"
            license "Apache-2.0"

            if Hardware::CPU.arm?
              url "https://github.com/AleG03/awsm/releases/download/${{ steps.extract_version.outputs.TAG }}/awsm_${{ steps.extract_version.outputs.VERSION }}_darwin_arm64.tar.gz"
              sha256 "${{ steps.sha_arm64.outputs.SHA }}"
            else
              url "https://github.com/AleG03/awsm/releases/download/${{ steps.extract_version.outputs.TAG }}/awsm_${{ steps.extract_version.outputs.VERSION }}_darwin_amd64.tar.gz"
              sha256 "${{ steps.sha_amd64.outputs.SHA }}"
            end

            def install
              bin.install "awsm"
              generate_completions_from_executable(bin/"awsm", "completion")
            end

            test do
              assert_match version.to_s, shell_output("\#{bin}/awsm --version")
            end
          end
          EOL

      - name: Commit and push changes
        run: |
          cd awsm-tap
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add Formula/awsm.rb
          git commit -m "Update awsm to ${{ steps.extract_version.outputs.TAG }}"
          git push